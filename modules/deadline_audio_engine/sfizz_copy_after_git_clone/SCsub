import os
import sys
import subprocess
Import('env')

def sys_exec(args):
    proc = subprocess.Popen(args, stdout=subprocess.PIPE, text=True)
    (out, err) = proc.communicate()
    return out.rstrip("\r\n").lstrip()

def mySubProcess(cmdline):

    startupinfo = subprocess.STARTUPINFO()
    startupinfo.dwFlags |= subprocess.STARTF_USESHOWWINDOW
    popen_args = {
        "stdin": subprocess.PIPE,
        "stdout": subprocess.PIPE,
        "stderr": subprocess.PIPE,
        "startupinfo": startupinfo,
        "shell": True,
    }
    if sys.version_info >= (3, 7, 0):
        popen_args["text"] = True
    proc = subprocess.Popen(cmdline, **popen_args)
    _, err = proc.communicate()
    rv = proc.wait()
    if rv:
        print("=====")
        print(err)
        print("=====")
    return rv

    # mySubProcess("mkdir deadline_audio_engine/sfizz/build")
#if env["platform"] == "windows":
    # 32 bits are unsupported
    # if env["bits"] == "32":
    #     mySubProcess("cmake ./ -DSFIZZ_JACK=OFF -DPLUGIN_LV2=OFF -DPLUGIN_LV2_UI=OFF -DCMAKE_BUILD_TYPE=ALL -DCMAKE_GENERATOR_PLATFORM=x86")
    # else:
    #    mySubProcess("cmake ./ -DSFIZZ_JACK=OFF -DPLUGIN_LV2=OFF -DPLUGIN_LV2_UI=OFF -DCMAKE_BUILD_TYPE=ALL")

mySubProcess("cmake ./ -DSFIZZ_JACK=OFF -DPLUGIN_LV2=OFF -DPLUGIN_LV2_UI=OFF -DCMAKE_BUILD_TYPE=ALL")

elif env["platform"] == "x11":
    mySubProcess("cmake ./ -DSFIZZ_JACK=OFF -DPLUGIN_LV2=OFF -DPLUGIN_LV2_UI=OFF -DCMAKE_BUILD_TYPE=ALL")
if env.dev_build:
    mySubProcess("cmake --build ./ --config Debug")
else:
    mySubProcess("cmake --build ./ --config Release")